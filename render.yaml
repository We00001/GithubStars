# render.yaml
# This file tells Render how to build and deploy your application.
# It defines a web service for your Flask app and a cron job for daily data updates.

services:
  # Web Service for the Flask App
  - type: web
    name: arxiv-star-tracker
    env: python
    plan: free # The free plan may spin down due to inactivity.
    buildCommand: "pip install -r requirements.txt"
    startCommand: "gunicorn app:app"
    envVars:
      - key: PYTHON_VERSION
        value: 3.11
      # --- Environment Variables ---
      # The values for these keys must be set in the Render Dashboard.
      # This keeps your secrets out of your repository.
      - key: GITHUB_API_KEY
      - key: GEMINI_API_KEY
      - key: GOOGLE_MODEL
      - key: BASE_URL # Even though this isn't a secret, setting it here keeps configuration consistent.
        value: "https://arxiv.org/list/cs.AI/recent"
    disks:
      - name: data-storage
        mountPath: /app/data
        sizeGB: 1

  # Cron Job for daily data updates
  - type: cron
    name: data-updater
    env: python
    plan: free
    schedule: "0 5 * * *" # Runs every day at 05:00 UTC
    startCommand: "bash example.sh"
    disks:
      - name: data-storage
        mountPath: /app/data
    # The cron job inherits the environment variables from the web service.
    # This means you only have to set them in one place (the web service dashboard).
    envVars:
      - key: GITHUB_API_KEY
        fromService: { type: web, name: arxiv-star-tracker, envVarKey: GITHUB_API_KEY }
      - key: GEMINI_API_KEY
        fromService: { type: web, name: arxiv-star-tracker, envVarKey: GEMINI_API_KEY }
      - key: GOOGLE_MODEL
        fromService: { type: web, name: arxiv-star-tracker, envVarKey: GOOGLE_MODEL }
      - key: BASE_URL
        fromService: { type: web, name: arxiv-star-tracker, envVarKey: BASE_URL }


